name: Deno CI

on:
  # pull_request:
  #   branches: [main]
  push:
    # branches: [main]
    paths:
      - 'ecmascript/**'
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     deno-version: [ 1.2.2, 1.3.0 ]

    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        # with:
        #   deno-version: ${{ matrix.deno-version }}
      # - name: Lint Deno Module
      #   run: deno fmt --check
      # - name: Build Deno Module
      #   run: deno run --reload mod.ts
      - run: cd ecmascript && deno task test-cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: false
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ecmascript/test/coverage
          # verbose: true
      # - run: ls ecmascript/test/report
      - name: Test Report
        uses: dorny/test-reporter@v1
        # if: success() || failure()    # run this step even if previous step failed
        if: false
        with:
          name: report                               # Name of the check run which will be created
          path: ecmascript/test/report/jest-*.xml    # Path to test results
          reporter: jest-junit                       # Format of test results